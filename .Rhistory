ylab="Prior 12 months online sales ($)",
cex=1,
log="xy")
abline(mean(cust.df$credit.score), col="dark blue", lty="dotted")
plot(cust.df$age, cust.df$credit.score,
col="blue",
xlim=c(15, 55), ylim=c(500, 900),
main="Active Customers as of June 2014",
xlab="Customer Age (years)", ylab="Credit Score ")
abline(mean(cust.df$credit.score), col="dark blue", lty="dotted")
abline(h=mean(cust.df$credit.score), col="dark blue", lty="dotted")
abline(v=mean(cust.df$age), col="dark blue", lty="dotted")
abline(lm(cust.df$credit.score ~ cust.df$age))
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=1,
log="xy")
plot(cust.df$store.spend, cust.df$online.spend,
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)",
cex=0.4,
log="xy")
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
par(mfrow=c(1, 3))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0
par(mfrow=c(1, 3))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0.5))
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
with(cust.df, plot(distance.to.store, online.spend+1,cex=0.5, log="xy"))
par(mfrow=c(1, 4))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0.5))
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
with(cust.df, plot(distance.to.store, online.spend+1,cex=0.5, log="xy"))
par(mfrow=c(1, 1))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0.5))
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
par(mfrow=c(1, 4))
with(cust.df, plot(distance.to.store, store.spend,cex=0.5))
with(cust.df, plot(distance.to.store, online.spend,cex=0.5))
with(cust.df, plot(distance.to.store, store.spend+1,cex=0.5, log="xy"))
plot(cust.df$store.spend, cust.df$online.spend,
log="xy",cex=0.7,
col=my.col[cust.df$email], pch=my.pch[cust.df$email],
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)" )
legend(x="topright", legend=paste("email on file:", levels(cust.df$email)),
col=my.col, pch=my.pch)
plot(cust.df$store.spend, cust.df$online.spend,
cex=0.7,
col=my.col[cust.df$email], pch=my.pch[cust.df$email],
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)" )
par(mfrow=c(1, 1))
my.col <- c("black", "red")
my.pch <- c(1, 19) # R's symbols for solid and open circles (see ?points)
plot(cust.df$store.spend, cust.df$online.spend,
cex=0.7,
col=my.col[cust.df$email], pch=my.pch[cust.df$email],
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)" )
legend(x="topright", legend=paste("email on file:", levels(cust.df$email)),
col=my.col, pch=my.pch)
library(car)
scatterplotMatrix(formula = ~ age + credit.score + online.spend, cex=0.6,
data=cust.df, diagonal="histogram")
cor.test(cust.df$age, cust.df$credit.score)
library(corrplot)    # install if needed
install.packages("corrplot")
library(corrplot)    # install if needed
corrplot(corr=cor(cust.df[ , c(2, 3, 5:12)], use="complete.obs"),
method ="ellipse")
# ==========
my.col <- c("black", "red")
my.pch <- c(1, 19) # R's symbols for solid and open circles (see ?points)
plot(cust.df$store.spend, cust.df$online.spend,
cex=0.7,
col=my.col[cust.df$email], pch=my.pch[cust.df$email],
main="Customers as of June 2014",
xlab="Prior 12 months in-store sales ($)",
ylab="Prior 12 months online sales ($)" )
legend(x="topright", legend=paste("email on file:", levels(cust.df$email)),
col=my.col, pch=my.pch)
?points
corrplot(corr=cor(cust.df[ , c(2, 3, 5:12)], use="complete.obs"),
method ="ellipse")
corrplot(corr=cor(cust.df[ , c(2, 3, 5:12)], use=""),
method ="ellipse")
corrplot(corr=cor(cust.df[ , c(2, 3, 5:12)],),
method ="ellipse")
boxplot(cust.df$age, main="Customer Age",
col=c("yellow"),horizontal=TRUE,
xlab="Age (Years)" )
boxplot(cust.df$credit.score, main="Customers' Credit Score",
col=c("yellow"),horizontal=TRUE,
xlab="Credit Score" )
nonzerot <- cust.df$online.trans[cust.df$online.trans>0]
summary(cust.df$online.trans)
summary(nonzerot)
seg.df <- read.csv(paste("CableTVSubscribersData.csv", sep=""))
View(seg.df)
str(seg.df)
str(seg.df)
library(psych)
attach(seg.df)
describe(seg.df)
library(lattice)
histogram(~subscribe | Segment, data=seg.df)
histogram(~subscribe | Segment, data=seg.df,
type="count",
layout=c(4,1),
col=c("burlywood", "darkolivegreen"))
histogram(~subscribe | Segment + ownHome, data=seg.df,
type="count",
layout=c(4,2),
col=c("burlywood", "darkolivegreen"))
histogram(~subscribe | Segment + ownHome, data=seg.df,
#          type="count",
layout=c(4,2),
col=c("burlywood", "darkolivegreen"))
histogram(~subscribe | Segment + ownHome, data=seg.df,
type="count",
layout=c(4,2),
col=c("burlywood", "darkolivegreen"))
barchart(income ~ Segment, data=seg.mean, col="grey")
seg.mean <- aggregate(income ~ Segment, data=seg.df, mean)
seg.agg <- aggregate(income ~ Segment + ownHome, data=seg.df, mean)
seg.mean <- aggregate(income ~ Segment, data=seg.df, mean)
seg.mean
barchart(income ~ Segment, data=seg.mean, col="grey")
seg.agg <- aggregate(income ~ Segment + ownHome, data=seg.df, mean)
seg.agg
barchart(income ~ Segment, data=seg.agg,
groups=ownHome, auto.key=TRUE,
par.settings = simpleTheme(col=c("gray95", "gray50")) )
setwd(G:/Kharagpur Studies/Data Analytics IIM Lucknow/Codes/)
setwd(G:/ Kharagpur Studies/ Data Analytics IIM Lucknow/Codes/)
setwd("G:/Kharagpur Studies/Data Analytics IIM Lucknow/Codes")
setwd("G:/Kharagpur Studies/Data Analytics IIM Lucknow/Codes")
View(titanic.df)
titanic.df<-read.csv(paste("titanic.csv", sep=""))
View(titanic.df)
dim(titanic.df)
library(psych)
describe(titanic.df)
dim(titanic.df$Survived)
dim(titanic.df)
dim(titanic.df$Survived)
table(titanic.df$Survived)
library(vcd)
prop.table(titanic.df$Survived)
mytable<-with(titanic.df,table(Survived))
mytable
prop.table(mytable)
prop.table(mytable)*100
mytable<-xtabs(~Pclass+Survived,data =titanic.df)
mytable
prop.table(mytable)
prop.table(mytable)*100
prop.table(mytable,1)*100
mytable
mytable<- xtabs(~Sex+Survived,data = titanic.df)
mytable
mytable<- xtabs(~Sex+Pclass+Survived,data = titanic.df)
mytable
mytable<-xtabs(~Sex+Survived,data = titanic.df)
mytable
prop.table(mytable)*100
prop.table(mytable,1)*100
prop.table(mytable,2)*100
mytable<-xtabs(~Sex+Survived,data = titanic.df)
mytable
prop.table(mytable)*100
prop.table(mytable,1)*100
chisq.test(mytable)
mba.df<-read.csv(paste("Data - Deans Dilemma.csv", sep = ""))
view(mba.df)
View(mba.df)
summary(mba.df)
library(psych)
describe(mba.df)
describe(mba.df$Salary)
summary(mba.df$Salary)
library(vcd)
mytable<-with(mba.df,table(Placement_B))
mytable
prop.table(mytable)
prop.table(mytable)*100
round(prop.table(mytable)*100)
round(prop.table(mytable)*100,2)
round(prop.table(mytable)*100,3)
round(prop.table(mytable)*100,1)
round(prop.table(mytable)*100,2)
placement.df<-mba.df[Placement_B>0]
placement.df<-mba.df$Placement_B>0
placement.df
placement.df<-table(mba.df$Placement_B>0)
placement.df
placement.df<-mba.df[which(mba.df$Placement_B>0)]
placement.df
placement.df<-mba.df[which(mba.df$Placement_B>0),]
placement.df
View(placement.df)
median(placement.df$Salary)
##This script contains all the codes for week1 day 6 assingment.It is related to a case of Harvard Buisness Case
#### named "A DEANâ€™S DILEMMA: SELECTION OF STUDENTS FOR THE MBA PROGRAM" by
##DHIMANT GANATRA  and  U. DINESH KUMAR###
mba.df<-read.csv(paste("Data - Deans Dilemma.csv", sep = ""))
View(mba.df)
summary(mba.df)
library(psych)
summary(placement.df$Salary)
median(placement.df$Salary)
table(placement.df$Gender)
table(placement.df$Gender,placement.df$Salary)
mean(table(placement.df$Gender,placement.df$Salary))
(table(placement.df$Gender,mean(placement.df$Salary))
table(placement.df$Gender,mean(placement.df$Salary))
apply(placement.df[placement.df$Gender,placement.df$Salary],2,mean)
placed.df<-mba.df[which(mba.df$Placement_B>0),]
View(placed.df)
View(placement.df)
table(placement.df$Gender,mean(placement.df$Salary))
gendersal<-xtabs(~Gender+Salary,data=placed.df)
gendersal
gendersal<-xtabs(~Gender+mean(Salary),data=placed.df)
gendersal<-mean(xtabs(~Gender+Salary,data=placed.df))
gendersal
gendersal<-aggregate(placed.df$p1sales,by=list(gender=placed.df$Gender))
gendersal<-aggregate(placed.df$p1sales,by=list(gender=placed.df$Gender),mean)
gendersal<-aggregate(placed.df$p1sales,by=list(gender=placed.df$Gender),mean)
hist(placed.df$Percent_MBA,main = "MBA Perfomance of Placed Students" ,xlab ="MBA Percentage",
ylab="Count",xlim=c(50,80),ylim=c(0,150))
notplaced.df<-mba.df[which(mba.df$Placement==0)]
View(notplaced.df)
notplaced.df<-mba.df[which(mba.df$Placement_B==0)]
notplaced.df<-mba.df[which(mba.df$Placement_B==0),]
View(notplaced.df)
par(mfrow=c(1,2))
with(placed.df,hist(placed.df,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150)))
with(nonplaced.df,hist(nonplaced.df,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150)))
par(mfrow=c(1,2))
with(placed.df,hist(placed.df$Percent_MBA,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150)))
with(nonplaced.df,hist(nonplaced.df$Percent_MBA,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150)))
par(mfrow=c(1,2))
with(placed.df,hist(placed.df$Percent_MBA,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150)))
with(nonplaced.df,hist(nonplaced.df$Percent_MBA,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150)))
with(nonplaced.df,hist(notplaced.df$Percent_MBA,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150)))
par(mfrow=c(1,2))
with(placed.df,hist(placed.df$Percent_MBA,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150)))
with(notplaced.df,hist(notplaced.df$Percent_MBA,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150)))
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE)
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE,colnames(Females,Males))
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE,colnames("Females","Males"))
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE,)
par(mfrow=c(1,1))
summary(mba.df$Salary)
gendersal<-aggregate(placed.df$Salary,by=list(gender=placed.df$Gender),mean)
gendersal
with(placed.df,hist(placed.df$Percent_MBA,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150),breaks = 3))
hist(placed.df$Percent_MBA,main = "MBA Perfomance of Placed Students" ,xlab ="MBA Percentage",
ylab="Count",xlim=c(50,80),ylim=c(0,150),breaks = 3)
par(mfrow=c(1,2))
with(placed.df,hist(placed.df$Percent_MBA,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150),breaks = 3))
with(notplaced.df,hist(notplaced.df$Percent_MBA,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150),breaks = 3))
par(mfrow=c(1,1))
placedEt.df<-placed.df[with(S.TEST>0),]
placedEt.df<-placed.df[with(placed.df$S.TEST>0),]
placedEt.df<-placed.df[which(placed.df$S.TEST>0),]
placedEt.df
View(placedEt.df)
library(car)
scatterplotMatrix(formula=~Salary+Percent_MBA+Percentile_ET,data=placedEt.df,
main="Scatter Plot Matrix",diagonal="histogram")
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE)
View(mba.df)
scatterplotMatrix(formula=~Salary+Percent_MBA+Percentile_ET,data=placedEt.df,
main="Scatter Plot Matrix")
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE)
## ------------------------------------------------------------------------
library(MASS)
library(psych)
attach(UScrime)
## ------------------------------------------------------------------------
table(So)
## ------------------------------------------------------------------------
summary(Prob)
## ------------------------------------------------------------------------
boxplot(Prob ~ So, data=UScrime,
xlab="Southern State (yes=1, no=0)", ylab="Prob. of Imprisonment")
## ------------------------------------------------------------------------
aggregate(UScrime$Prob, by=list(UScrime$So), FUN=mean)
## ------------------------------------------------------------------------
t.test(Prob ~ So, data=UScrime)
## ------------------------------------------------------------------------
describe(U1)
describe(U2)
## ------------------------------------------------------------------------
par(mfrow=c(1,2))
boxplot(U1, data=UScrime)
boxplot(U2, data=UScrime)
## ------------------------------------------------------------------------
t.test(U1, U2, paired=TRUE)
boxplot(Prob ~ So, data=UScrime,
xlab="Southern State (yes=1, no=0)", ylab="Prob. of Imprisonment")
aggregate(UScrime$Prob, by=list(UScrime$So), FUN=mean)
describe(U1)
describe(U2)
par(mfrow=c(1,2))
boxplot(U1, data=UScrime)
boxplot(U2, data=UScrime)
t.test(U1, U2, paired=TRUE)
##This script contains all the codes for week1 day 6 assingment.It is related to a case of Harvard Buisness Case
#### named "A DEANâ€™S DILEMMA: SELECTION OF STUDENTS FOR THE MBA PROGRAM" by
##DHIMANT GANATRA  and  U. DINESH KUMAR###
mba.df<-read.csv(paste("Data - Deans Dilemma.csv", sep = ""))
View(mba.df)
summary(mba.df)
library(psych)
describe(mba.df)
# Use R to calculate the median salary of all the students in the data sample #
describe(mba.df$Salary)
summary(mba.df$Salary)
#240000 is the median salary of all the students#
#Use R to calculate the percentage of students who were placed, correct to 2 decimal#
library(vcd)
mytable<-with(mba.df,table(Placement_B))
mytable
round(prop.table(mytable)*100,2)
#79.80% of students were placed#
#Use R to create a dataframe called placed,#
#that contains a subset of only those students who were successfully placed.#
placed.df<-mba.df[which(mba.df$Placement_B>0),]
placed.df
View(placed.df)
#Use R to find the median salary of students who were placed.#
median(placed.df$Salary)
#260000 is the median of the salary of students who were placed#
#Use R to create a table showing the mean salary of males and females, who were placed.#
library(vcd)
gendersal<-aggregate(placed.df$Salary,by=list(gender=placed.df$Gender),mean)
gendersal
#Use R to generate the following histogram showing a#
#breakup of the MBA performance of the students who were placed#
hist(placed.df$Percent_MBA,main = "MBA Perfomance of Placed Students" ,xlab ="MBA Percentage",
ylab="Count",xlim=c(50,80),ylim=c(0,150),breaks = 3)
#Create a dataframe called notplaced, that contains a subset of #
#only those students who were NOT placed after their MBA.#
notplaced.df<-mba.df[which(mba.df$Placement_B==0),]
View(notplaced.df)
#Draw two histograms side-by-side, #
#visually comparing the MBA performance of Placed and Not Placed students#
par(mfrow=c(1,2))
with(placed.df,hist(placed.df$Percent_MBA,main = "MBA Perfomance Of Placed Students",xlab = "MBA Percentage",ylab = "Count",
xlim=c(50,80),ylim=c(0,150),breaks = 3))
with(notplaced.df,hist(notplaced.df$Percent_MBA,main = "MBA Perfomance of not placed students",
xlab = "MBA Percentage",ylab = "Count",
xlim = c(50,80),ylim = c(0,150),breaks = 3))
par(mfrow=c(1,1))
#Use R to draw two boxplots, one below the other,#
# comparing the distribution of salaries of males and females who were placed,#
boxplot(placed.df$Salary~placed.df$Gender,main="Comparison Of salaries of male and female",
xlab="salary",ylab="Gender",horizontal=TRUE)
par(mfrow=c(1,1))
#Create a dataframe called placedET,#
#representing students who were placed "after the MBA#
#and who also gave some MBA entrance test before admission into the MBA program#
placedEt.df<-placed.df[which(placed.df$S.TEST>0),]
placedEt.df
View(placedEt.df)
#Draw a Scatter Plot Matrix for#
# 3 variables -- {Salary, Percent_MBA, Percentile_ET} using the dataframe placedET.#
library(car)
scatterplotMatrix(formula=~Salary+Percent_MBA+Percentile_ET,data=placedEt.df,
main="Scatter Plot Matrix")
mytable<-aggregate(placed.df$Salary,by=list(Gender=placed.df$Gender),mean)
mytable
t.test(Salary~Gender,data = placed.df,var.equal=TRUE,alternative="less")
t.test(Salary~Gender,data = placed.df,alternative="less")
setwd("G:/Kharagpur Studies/Data Analytics IIM Lucknow/Codes/Week1")
titanic.df<-read.csv(paste("titanic.csv"),sep = "")
View(titanic.df)
View(titanic.df)
View(titanic.df)
View(titanic.df)
titanic.df<-read.csv(paste("titanic.csv"))
View(titanic.df)
summary(titanic.df)
dim(titanic.df)
prop.table(mytable)
mytable<-with(titanic.df,table(Survived))
mytable
prop.table(mytable)
mytable<-xtabs(~Pclass+Survived,data = titanic.df)
mytable
prop.table(mytable)*100
prop.table(mytable,1)*100
mytable<-xtabs(~Sex+Survived+Pclass,data=titanic.df)
mytable
mytable<-xtabs(~Sex+Survived,data = titanic.df)
mytable
prop.table(mytable)*100
prop.table(mytable,1)*100
chisq.test(mytable)
mytable<-aggregate(titanic.df$Age,by=list(Survived,titanic.df$Survived),mean)
mytable<-aggregate(titanic.df$Age,by=list(Survived=titanic.df$Survived),mean)
mytable
t.test(Age~Survived,data = titanic.df,alternative="greater")
mytable<-aggregate(placed.df$Salary,by=list(Gender=placed.df$Gender),mean)
mytable
t.test(Salary~Gender,data = placed.df,alternative="less")
myt <- xtabs(~ Survived+Pclass+Sex, data=titanic)
### TITANIC SURVIVAL ANALYSIS
#1 Read the Titanic dataset and save it inside a data frame called "titanic"
titanic <- read.csv(paste("Titanic Data.csv", sep=""))
#2 Summary Statistics of the data
summary(titanic)
library(psych)
describe(titanic)
attach(titanic)
str(titanic)
#3 ANALYZE WHO AND HOW MANY SURVIVED
# 3a. Total Number of Passengers
dim(titanic)
# 3b. Number of Passengers who survived
survivedTable <- table(titanic$Survived)
survivedTable
# 3c. Percentage of Passengers who surivied
100*prop.table(survivedTable) # proportions
# 3c. Alternate soluton
summary(titanic$Survived)
# 3d.  Number of 1st Class Passengers Who Survived?
surviversByClass <- xtabs(~ Survived+Pclass, data=titanic)
surviversByClass # frequencies
addmargins(surviversByClass)
# 3e.  Percentage of 1st Class Passengers Who Survived?
prop.table(surviversByClass, 2) # column proportions
# 3f.  Percentage of 3rd Class Who Survived?
prop.table(surviversByClass, 2) # column proportions
# 3g. Number of Females from 1st Class who survived
myt <- xtabs(~ Survived+Pclass+Sex, data=titanic)
addmargins(myt)
ftable(myt)
surviversBySex <- xtabs(~ Survived+Sex, data=titanic)
surviversBySex # frequencies
addmargins(surviversBySex)
# 3h. Percentage of Surivers who were Female
prop.table(surviversBySex,1)
# Ans: 67.9%
# 3i. Percentage of total females on the Titanic who survived
prop.table(surviversBySex,2)
# Ans: 74.0%
# 3j. Chi Square Test : percentage of female survivers was higher than percentage of male survivers
chisq.test(surviversBySex)
titanic <- read.csv(paste("titanic.csv", sep=""))
summary(titanic)
library(psych)
describe(titanic)
attach(titanic)
str(titanic)
dim(titanic)
survivedTable <- table(titanic$Survived)
survivedTable
100*prop.table(survivedTable) # proportions
summary(titanic$Survived)
surviversByClass <- xtabs(~ Survived+Pclass, data=titanic)
surviversByClass # frequencies
addmargins(surviversByClass)
prop.table(surviversByClass, 2) # column proportions
prop.table(surviversByClass, 2) # column proportions
myt <- xtabs(~ Survived+Pclass+Sex, data=titanic)
addmargins(myt)
ftable(myt)
surviversBySex <- xtabs(~ Survived+Sex, data=titanic)
surviversBySex # frequencies
addmargins(surviversBySex)
prop.table(surviversBySex,1)
prop.table(surviversBySex,2)
chisq.test(surviversBySex)
